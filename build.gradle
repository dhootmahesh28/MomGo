//Plugin for Sonarqube and  grgit
buildscript {
    repositories {
        mavenLocal()
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {
        classpath "org.ajoberstar.grgit:grgit-gradle:3.1.1"
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.8"
    }
}
plugins {
    id "org.sonarqube" version "2.8"
    id "org.ajoberstar.grgit" version "3.1.1"
}
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'groovy'
apply plugin: 'java'

group 'qmo-crew-automation'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

//include ':app', ":ApplicationModel"
//project(':ApplicationModel').projectDir = new File(settingsDir, '../TrimAppModel/appmodels/com/objects/lft/ApplicationModel')

//include ':Dependency'
//project(':Dependency').projectDir = new File(settingsDir, '../TrimAppModel/appmodels/com/objects/lft/AppModel')

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
        }
    }
}

repositories {
    mavenCentral()
    mavenLocal()
    //flatDir {dirs 'C:\\Program Files (x86)\\HPE\\Unified Functional Testing\\SDK\\Java\\'}
    jcenter()
    maven {url "https://nexus-tools.swacorp.com/MX/content/repositories/public/"}
}

dependencies {
    compile group: 'junit', name: 'junit', version: '4.12'
    compile group: 'org.testng', name: 'testng', version: '6.14.3'
    compile group: 'com.aventstack', name: 'extentreports', version: '3.1.5'
    compile group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '3.6.0'
    compile group: 'io.appium', name: 'java-client', version: '5.0.0-BETA6'
    compile(group: 'org.seleniumhq.selenium.fluent', name: 'fluent-selenium', version: '1.14.5') {
        exclude(module: 'selenium-java')
    }
    compile group: 'com.google.guava', name: 'guava', version: '17.0'
    compile group: 'com.swacorp.qmo', name: 'qmo-alm-restconnector', version: '1.0.10'
    compile group: 'com.swacorp.qmo', name: 'qmo-cyberark-connector', version: '1.0.9'
    compile group: 'org.apache.commons', name: 'commons-collections4', version: '4.4'
    compile group: 'org.apache.commons', name: 'commons-io', version: '1.3.2'
    compile group: 'log4j', name: 'log4j', version: '1.2.17'
    compile group: 'com.opencsv', name: 'opencsv', version: '4.6'
    //implementation 'io.appium:java-client:5.0.0-BETA6'
/*    compile group: 'com.hp.lft', name: 'com.hp.lft.sdk', version: '14.3.0'
    compile group: 'com.hp.lft', name: 'com.hp.lft.report', version: '14.3.0'
    compile group: 'com.hp.lft', name: 'com.hp.lft.unittesting', version: '14.3.0'
    compile group: 'com.hp.lft', name: 'com.hp.lft.verifications', version: '14.3.0'*/
//    compile 'org.robotframework:robotframework-maven-plugin:1.5.1'

    compile group: 'com.hp.lft', name: 'com.hp.lft.sdk', version: '14.3.0'
    compile group: 'com.hp.lft', name: 'com.hp.lft.report', version: '14.3.0'
    compile group: 'com.hp.lft', name: 'com.hp.lft.unittesting', version: '14.3.0'
    compile group: 'com.hp.lft', name: 'com.hp.lft.verifications', version: '14.3.0'



/*    compile (name:'com.hp.lft.sdk-standalone', ext:'jar')
    compile (name:'com.hp.lft.unittesting', ext:'jar')
    compile (name:'com.hp.lft.verifications', ext:'jar')
    compile (name:'com.hp.lft.report', ext:'jar')*/


    compile files("C:/Program Files (x86)/HPE/Unified Functional Testing/SDK/Java/com.hp.lft.unittesting.jar")
    compile files("C:/Program Files (x86)/HPE/Unified Functional Testing/SDK/Java/com.hp.lft.verifications.jar")
    compile files("C:/Program Files (x86)/HPE/Unified Functional Testing/SDK/Java/com.hp.lft.report.jar")

}

 //Sonarqube task to scan the project

    sonarqube {

        def branchName = System.getProperty("branchName")
        if (branchName == null) {
            branchName = grgit.branch.current().name
        }

        println "branch name :>> " + branchName

        properties {

            property 'sonar.projectName', "qmo-crew-automation"
            property 'sonar.projectKey', "crew-automation-sonar"
            property "sonar.branch.name", branchName
            property 'sonar.host.url', "https://sonar-tools.swacorp.com/QMOAUTO/"
            property "sonar.sources", "src/main/java"
            property "sonar.tests", "src/test/java"
            property "sonar.analysis.mode", "publish"
            property 'sonar.exclusions', "$buildDir/**/*"
            property 'sonar.issuesReport.html.enable', 'true'
            property 'sonar.exclusions', 'src/main/java/com/swacorp/crew/sharedrepository/**/*.java'        }

        gradle.startParameter.continueOnFailure = true
        def xrefDirectory = System.getProperty("user.dir") + "\\target\\jbehave\\view\\"
        test {
            systemProperty 'test.env', System.getProperty('test.env')
            systemProperty 'browser', System.getProperty('browser')
            systemProperty "includedGroups", System.getProperty("includedGroups")
            systemProperty "excludedGroups", System.getProperty("excludedGroups")
            systemProperty "uploadResultsToALM", System.getProperty("uploadResultsToALM")
            systemProperty "ALMCycleId", System.getProperty("ALMCycleId")
            systemProperty "ALMProject", System.getProperty("ALMProject")
            systemProperty "ALMDomain", System.getProperty("ALMDomain")
            systemProperty "xrefDirectory", xrefDirectory
            useTestNG() {

                outputDirectory = file("${buildDir}/test-output")
                useDefaultListeners = true


                excludeGroups << System.getProperty("excludedGroups").toString()
                includeGroups << System.getProperty("includedGroups").toString()
                options {
                    parallel = 'classes'
                    threadCount = 1
                }
            }

            //Modify the test logging
            testLogging {
                showStandardStreams = true
                exceptionFormat "full"
            }

            //Disable the default groovy html reports since ReportNG is being used
            reports.html.enabled = true

            ignoreFailures = true
        }

        clean.doLast {
            file(xrefDirectory).deleteDir()
        }
    }