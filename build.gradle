//Plugin for Sonarqube and  grgit
buildscript {
    repositories {
        mavenLocal()
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {

        classpath "org.ajoberstar.grgit:grgit-gradle:3.1.1"
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.8"
    }
}
plugins {
    id "org.sonarqube" version "2.8"
    id "org.ajoberstar.grgit" version "3.1.1"
}
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'groovy'
apply plugin: 'java'

/*tasks.withType(Test) {
    testLogging {
        exceptionFormat "full"
        events "started", "skipped", "passed", "failed"
        showStandardStreams true
    }
}*/

group 'qmo-crew-automation'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
        }
    }
}

repositories {
    mavenCentral()
    mavenLocal()
    jcenter()
    //maven {url "https://nexus-tools.swacorp.com/MX/content/repositories/public/"}
    //maven {url "https://cloud.experitest.com/repo/"}
    maven {url "https://nexus-tools.swacorp.com/repository/releases/"}
}

dependencies {
    compile group: 'junit', name: 'junit', version: '4.12'
    testImplementation 'org.hamcrest:hamcrest:2.2'
    compile group: 'org.testng', name: 'testng', version: '6.14.3'
    //compile group: 'commons-lang', name: 'commons-lang', version: '2.6'
    //compile group: 'com.experitest', name: 'seetest-client', version: "20.10"
    compile group: 'com.aventstack', name: 'extentreports', version: '3.1.5'
    compile group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '3.6.0'
    compile group: 'io.appium', name: 'java-client', version: '5.0.0-BETA6'
    compile(group: 'org.seleniumhq.selenium.fluent', name: 'fluent-selenium', version: '1.14.5') {
        exclude(module: 'selenium-java')
    }
    compile group: 'com.google.guava', name: 'guava', version: '17.0'
    //compile group: 'com.swacorp.qmo', name: 'qmo-alm-restconnector', version: '1.0.10'
    //compile group: 'com.swacorp.qmo', name: 'qmo-cyberark-connector', version: '1.0.9'
    compile group: 'org.apache.commons', name: 'commons-collections4', version: '4.4'
    compile group: 'org.apache.commons', name: 'commons-io', version: '1.3.2'
    compile group: 'log4j', name: 'log4j', version: '1.2.17'
    compile group: 'com.opencsv', name: 'opencsv', version: '4.6'
    compile group: 'io.rest-assured', name: 'rest-assured', version: '4.1.2'
    compile group: 'org.apache.pdfbox', name: 'pdfbox', version: '2.0.19'
    // https://mvnrepository.com/artifact/com.microsoft.edge/msedge-selenium-tools-java
    compile group: 'com.microsoft.edge', name: 'msedge-selenium-tools-java', version: '3.141.0'


}

//Sonarqube task to scan the project

sonarqube {

    def branchName = System.getProperty("branchName")
    if (branchName == null) {
        branchName = grgit.branch.current().name
    }

    println "branch name :>> " + branchName

    properties {

        property 'sonar.projectName', "qmo-crew-automation"
        property 'sonar.projectKey', "crew-automation-sonar"
        property "sonar.branch.name", branchName
        property 'sonar.host.url', "https://sonar-tools.swacorp.com/QMOAUTO/"
        property "sonar.sources", "src/main/java"
        property "sonar.tests", "src/test/java"
        property "sonar.analysis.mode", "publish"
        property 'sonar.exclusions', "$buildDir/**/*"
        property 'sonar.issuesReport.html.enable', 'true'
        property 'sonar.exclusions', 'src/main/java/com/swacorp/crew/sharedrepository/**/*.java'        }

    gradle.startParameter.continueOnFailure = true
    def xrefDirectory = System.getProperty("user.dir") + "\\target\\jbehave\\view\\"
    test {
        systemProperty 'test.env', System.getProperty('test.env')
        systemProperty "role", System.getProperty("role")
        systemProperty 'browser', System.getProperty('browser')
        systemProperty "includedGroups", System.getProperty("includedGroups")
        systemProperty "excludedGroups", System.getProperty("excludedGroups")
        systemProperty "uploadResultsToALM", System.getProperty("uploadResultsToALM")
        systemProperty "ALMCycleId", System.getProperty("ALMCycleId")
        systemProperty "ALMProject", System.getProperty("ALMProject")
        systemProperty "ALMDomain", System.getProperty("ALMDomain")
        systemProperty "SchedPeriod", System.getProperty("SchedPeriod")
        systemProperty "xrefDirectory", xrefDirectory
        useTestNG() {

            outputDirectory = file("${buildDir}/test-output")
            useDefaultListeners = true


            excludeGroups << System.getProperty("excludedGroups").toString()
            includeGroups << System.getProperty("includedGroups").toString()
            options {
                parallel = 'classes'
                threadCount = 1
            }
        }

        //Modify the test logging
        testLogging {
            showStandardStreams = true
            exceptionFormat "full"
        }

        //Disable the default groovy html reports since ReportNG is being used
        reports.html.enabled = true

        ignoreFailures = false
    }

    clean.doLast {
        file(xrefDirectory).deleteDir()
    }
}